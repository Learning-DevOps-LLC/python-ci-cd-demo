name: Python CI + Docker Build & Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Allow pushing changes to README.md

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

      - name: Auto-insert CI, Docker, and Deploy badges with headings into README
        run: |
          FILE="README.md"
          CI_BADGE_HEADER="# Python CI + Docker Build & Push"
          CI_BADGE='[![Python CI + Docker Build & Push](https://github.com/${{ github.repository }}/actions/workflows/ci-docker.yml/badge.svg?branch=main)](https://github.com/${{ github.repository }}/actions/workflows/ci-docker.yml)'

          DOCKER_BADGE_HEADER="# Docker Pulls"
          DOCKER_BADGE='[![Docker Pulls](https://img.shields.io/docker/pulls/ashishsingh2110/python-ci-cd-demo.svg)](https://hub.docker.com/r/ashishsingh2110/python-ci-cd-demo)'

          DEPLOY_BADGE_HEADER="# Deployed"
          DEPLOY_BADGE='[![Deployed](https://img.shields.io/badge/Live-Demo-green)](https://python-ci-cd-demo-wg2r.onrender.com/)'

          INSERTED=false

          if [ -f "$FILE" ]; then
            cp "$FILE" "$FILE.bak"
            echo "" > top.md

            if ! grep -qF "$CI_BADGE" "$FILE"; then
              echo "Adding CI badge with header..."
              echo "$CI_BADGE_HEADER" >> top.md
              echo "$CI_BADGE" >> top.md
              echo "" >> top.md
              INSERTED=true
            fi

            if ! grep -qF "$DOCKER_BADGE" "$FILE"; then
              echo "Adding Docker badge with header..."
              echo "$DOCKER_BADGE_HEADER" >> top.md
              echo "$DOCKER_BADGE" >> top.md
              echo "" >> top.md
              INSERTED=true
            fi

            if ! grep -qF "$DEPLOY_BADGE" "$FILE"; then
              echo "Adding Deploy badge with header..."
              echo "$DEPLOY_BADGE_HEADER" >> top.md
              echo "$DEPLOY_BADGE" >> top.md
              echo "" >> top.md
              INSERTED=true
            fi

            if [ "$INSERTED" = true ]; then
              cat "$FILE.bak" >> top.md
              mv top.md "$FILE"
              git config --global user.name "github-actions"
              git config --global user.email "github-actions@github.com"
              git add "$FILE"
              git commit -m "ðŸ¤– Auto-insert badges with headings [skip ci]"
              git push
            else
              echo "All badges already present."
            fi
          else
            echo "README.md not found, skipping badge insertion."
          fi

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image tag (date-based)
        id: vars
        run: echo "TAG=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python-ci-cd-demo:${{ steps.vars.outputs.TAG }} .

      - name: Push Docker image (tagged)
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-ci-cd-demo:${{ steps.vars.outputs.TAG }}

      - name: Tag and push latest
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/python-ci-cd-demo:${{ steps.vars.outputs.TAG }} ${{ secrets.DOCKER_USERNAME }}/python-ci-cd-demo:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/python-ci-cd-demo:latest
